aliases:
  - &setup
      - install-deps
      - checkout

version: 2.1

commands:
  install-deps:
    steps:
      - run:
          name: Add repositories with Ansible and buildah packages
          shell: sudo /bin/bash -eo pipefail
          command: |
            apt update
            apt --yes install software-properties-common
            apt-add-repository --yes ppa:ansible/ansible
            apt-add-repository --yes ppa:projectatomic/ppa
            apt update
      - run:
          name: Install dependencies
          command: sudo apt --yes install ansible buildah

executors:
  ubuntu:
    machine:
      image: ubuntu-1604:201903-01

jobs:
  build:
    executor: ubuntu
    steps:
      - run:
          name: Pull roles from repository
          command: |
            pip install python-gilt
            gilt overlay
      - run:
          name: Build a container
          command: sudo -E ansible-playbook build.yml provision.yml cleanup.yml
  push:
    executor: ubuntu
    steps:
      - run:
          name: Create a barebones container
          command: buildah from --name foo scratch
      - run:
          name: Write a new image and push it to registry
          command: ansible-playbook commit.yml --extra-vars "container=foo tag=1.23.45"
  test_job_1:
    executor: ubuntu
    steps:
      - run:
          name: Pull roles from repository
          command: |
            pip install python-gilt
            gilt overlay
      - run:
          name: Build a container
          command: sudo -E ansible-playbook build.yml
  test_job_2:
    executor: ubuntu
    steps:
      - run:
          name: Create container from image on a registry
          command: ansible-playbook pull.yml --extra-vars "tag=2020.02.01"
  test_job_3:
    executor: ubuntu
    steps:
      - run:
          name: Build a container and save image to file
          shell: sudo /bin/bash -eo pipefail
          command: |
            ansible-playbook build.yml
            buildah commit working-container foo
            buildah push localhost/foo oci-archive:CIRCLE_WORKING_DIRECTORY/foo-image:latest
      - run: ls -la

workflows:
  pull_request:
    jobs:
      - build:
          filters:
            branches:
              ignore: master
          pre-steps: *setup
      - push:
          filters:
            branches:
              ignore: master
          pre-steps: *setup
      - test_job_1:
          pre-steps: *setup
      - test_job_2:
          pre-steps: *setup
      - test_job_3:
          pre-steps: *setup
